##  (C) by Remo Dentato (rdentato@gmail.com)
##
## This software is distributed under the terms of the MIT license:
##  https://opensource.org/licenses/MIT
##

## This is a tipical bld.top file for C programs

## Variables

CC=${CC:-gcc}
CCFLAGS="-O2 -Wall -std=c99"
LNFLAGS=""
LIBS=""
DBGFLAGS=""
AR="ar -r"
RM="rm -f"

## The variable _EXE allows the same bld script to work
## on msys (Windows) or Linux.

_EXE=""
if [ -x "$(which gcc).exe" ] ; then
_EXE=.exe
fi

## Default rules

## This is for programs that use my utl functions
chk_utl_done=0
chk_utl () {
  if [ "$chk_utl_done" = "0" ] ; then
    if [ -f $bld_top/utl/bld.trg ] ; then 
      bld -d $bld_top/utl libutl
      if [ -f $bld_top/utl/utl.h ] ; then CCFLAGS="$CCFLAGS -I $bld_top/utl/" ; fi
      if [ -f $bld_top/utl/libutl.a ] ; then LIBS="$LIBS -lutl" ; LNFLAGS="$LNFLAGS -L $bld_top/utl/" ; fi
    fi
    chk_utl_done=1
  fi
}

## Compile a set of object files from the corresponding
## C sorurce files. For example:
##        cc_obj a.o b.o
## will compile a.o from a.c and b.o from b.c

cc_obj () {
  local src=$1
  local obj
  #chk_utl
  while [ "$src" != "" ] ; do
    src=${src%.*}.c
    obj=${src%.*}.o
    bld_old $obj $src && {
      bld_cmd $CC $CCFLAGS $DBGFLAGS -o $obj -c $src
    }
    shift
    src=$1
  done
}

## Generate an executable from a set of object files
## For example:
##   cc_exe prg a.o b.o c.o
## will create the executable prg from a.o, b.o and c.o

cc_exe () {
  local exe=$1
  shift
  cc_obj $*
  bld_cmd $CC $LNFLAGS -o $exe $* $LIBS
}

