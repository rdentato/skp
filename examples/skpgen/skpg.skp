// \7 -> ruledef
// \6 -> repeat
// \5 -> ast
// \4 -> lookahead (& !)
// \3 -> match (string)
// \2 -> ruleref
// \1 -> info

grammar = (_spc_ _ruledef)+  _'&*s&!.' ;
ruledef = rulenamedef _spc_ _'=' _spc_ ^alt ;
rulenamedef = "&I\7" ;

alt =  ^alt_once ( _spc_ _'&*s/' alt_or)* ;
alt_once = _seq ;
alt_or = _seq ;

seq = (_spc_ match)+ ;
match =  match_term repeat? / '&[!&]\4' match / _'#' '&D';

match_term = string / _'(' _spc_ alt _spc_ _')' / '_\5<\5^^\5^' rulenameref ;
rulenameref = "&I\2" ;
repeat = "&[*+?]\6" ;

string = '&?[_]\5' "&Q\3" ;
spc_ = ("&+s" / '//&N')* ;
spc  = ("&+s" / '//&N')+ ;

